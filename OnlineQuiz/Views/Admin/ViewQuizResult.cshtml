@model AdminViewModel

@{
    ViewData["Title"] = "ViewQuizResult";
}

<h1>ViewQuizResult</h1>
<div class="container">
    <a class="btn btn-dark" asp-action="Index">Return</a>
</div>
<div class="container">
    <form id="category-filter-form" method="post" asp-action="ViewQuizResult">
        <div class="form-group col-3">
            <label for="category-selector" class="control-label">Select a category:</label>
            <select id="category-selector" name="categoryFilter" class="form-control col-3">
                <option value="">All</option>
                @foreach (QuizCategory category in Enum.GetValues(typeof(QuizCategory)))
                {
                    <option value="@(category.ToString())">@(category.ToDescription())</option>
                }
            </select>
        </div>
        <div class="form-group col-3">
            <label for="user-selector" class="control-label">Select a user:</label>
            <select id="user-selector" name="userFilter" class="form-control">
                <option value="">All</option>
                @if (Model.QuizSubmissions is not null)
                {
                    @foreach (var user in Model.QuizSubmissions.Select(x => x.Users).Distinct())
                    {
                        <option value="@(user.UserID)">@user.FirstName @user.LastName</option>
                    }
                }
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Filter</button>
    </form>
</div>

@{
    await Html.RenderPartialAsync("_QuizResultPartial", Model);
    
}
<script src="~/js/sort.js"></script>
<script>
    //function submitForm() {
    //    let pageNumber = document.getElementById('page-selector').value;
    //    let categoryFilter = document.getElementById('category-selector').value;
    //    var xhr = new XMLHttpRequest();
    //    xhr.open('POST', '/Admin/ViewQuizResult', true);
    //    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    //    xhr.onreadystatechange = function () {
    //        if (xhr.readyState === 4 && xhr.status === 200) {
    //            document.getElementById("data-container").innerHTML = xhr.responseText;
    //        }
    //    };
    //    xhr.send("pageNumber=" + pageNumber + "&categoryFilter=" + categoryFilter);
    //}

    function navigateToSelectedPage() {
        var pageNumber = $("#page-selector").val();
        window.location.href = "/Admin/ViewQuizResult?pageNumber=" + pageNumber;
    }
    function navigateToPreviousPage() {
        var pageNumber = $("#page-selector").val();
        if (pageNumber > 1) {
            pageNumber--;
            window.location.href = "/Admin/ViewQuizResult?pageNumber=" + pageNumber;
        }
    }
    function navigateToNextPage() {
        let pageNumber = $("#page-selector").val();
        if (pageNumber < @Model.TotalPages) {
            pageNumber++;
            window.location.href = "/Admin/ViewQuizResult?pageNumber=";
        }
    }
</script>
